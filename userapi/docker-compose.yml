#Here we define 2 services : web for our web app userapi, and then the redis service.
#Now that we have done Istio part with 2 different versions of our app, defined in 2 tags in our docker image userapi.
#We could, if we wanted, define another container web2, who would pull the second tag of oue app v3
#If we do that, we would define another port for the v2 of our app to run.
#Then, when we would launch docker-compose up, the two different versions of our app would run on the two ports defined, with redis.
version: '3'

services:
  web:
    depends_on:
      - redis  #we specify that the web serviceis here depending on the redis service
    build:
      #context: ./userapi #location of the docker build context, in our case we are in the same place
      dockerfile: Dockerfile
    container_name: projectdevopsssss
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules 
    ports:
      - "3000:3000" # mapping of the port 3000 of the container to the port 3000 of the host 
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
  redis:
    image: redis #using official redis image from Docker Hub
    volumes:
      - db-data:/data

volumes:
  db-data:

